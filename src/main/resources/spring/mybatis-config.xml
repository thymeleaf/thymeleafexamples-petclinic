<?xml version="1.0" encoding="UTF-8"?>
<!--
    Repository and Service layers
-->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
 
    <!-- ========================= RESOURCE DEFINITIONS ========================= -->

    <!-- import the dataSource definition -->
    <import resource="datasource-config.xml"/>

    <context:component-scan
            base-package="org.springframework.samples.petclinic.service"/>

    <!-- Configurer that replaces ${...} placeholders with values from a properties file -->
    <!-- (in this case, JDBC-related settings for the JPA EntityManager definition below) -->
    <context:property-placeholder location="classpath:spring/data-access.properties"/>

     <!-- enables scanning for @Transactional annotations -->
    <tx:annotation-driven />
    
    <beans profile="mybatis-spring">

 		<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager" p:cache-manager-ref="ehcache"/>
		<bean id="ehcache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" p:config-location="classpath:ehcache.xml"/>

		<!-- enable autowire -->
		<context:annotation-config />

		<!-- enable transaction demarcation with annotations -->
		<tx:annotation-driven transaction-manager="transactionManager" />

		<!-- transaction manager, use JtaTransactionManager for global tx -->
		<bean id="transactionManager"
			class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<property name="dataSource" ref="dataSource" />
		</bean>
		
		<!-- define the SqlSessionFactory -->
		<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
			<property name="dataSource" ref="dataSource" />
			<property name="transactionFactory" ref="springManagedTransactionFactory" />
			<property name="typeAliasesPackage" value="org.springframework.samples.petclinic.model" />
		</bean>

		<bean class="org.mybatis.spring.transaction.SpringManagedTransactionFactory"
			id="springManagedTransactionFactory">
		</bean>

		<!-- scan for mappers and let them be autowired -->
		<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
			<property name="basePackage" value="org.springframework.samples.petclinic.repository.mybatis.mapper" />
		</bean>

		<!-- enable component scanning (beware that this does not enable mapper scanning!) -->
		<context:component-scan base-package="org.springframework.samples.petclinic.repository.mybatis"/>
		
		<!-- jdbcTemplate para el checkeo del estado de la base de datos -->
		<bean id="jdbcTemplateCheck" class="org.springframework.jdbc.core.JdbcTemplate">
			<constructor-arg ref="dataSource"/>
		</bean>    
        
        
        
    </beans>

</beans>